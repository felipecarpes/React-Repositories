{"ast":null,"code":"import _slicedToArray from \"/home/felipe/desafio5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/felipe/desafio5/src/pages/Repository/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\nimport { Loading, Owner, IssueList, Selected } from './styles';\nimport Container from '../../components/Container';\nexport default class Repository extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      repository: {},\n      issues: [],\n      loading: true\n    };\n\n    this.handleSelect = async e => {\n      const selected = e.target.value;\n      const repository = this.state.repository;\n      const issues = api.get(`/repos/${repository.owner.login}/${repository.name}/issues`, {\n        params: {\n          state: selected,\n          per_page: 5\n        }\n      });\n      this.setState({\n        type: selected,\n        issues: issues.data\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const match = this.props.match;\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const _ref = await Promise.all([api.get(`/repos/${repoName}`), api.get(`/repos/${repoName}/issues`, {\n      params: {\n        state: 'open',\n        per_page: 5\n      }\n    })]),\n          _ref2 = _slicedToArray(_ref, 2),\n          repository = _ref2[0],\n          issues = _ref2[1];\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          repository = _this$state.repository,\n          issues = _this$state.issues,\n          loading = _this$state.loading;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Carregando...\");\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Owner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Voltar aos reposit\\xF3rios\"), React.createElement(\"img\", {\n      src: repository.owner.avatar_url,\n      alt: repository.owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, repository.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, repository.description)), React.createElement(Selected, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Listar: \"), React.createElement(\"select\", {\n      name: \"issueStatus\",\n      onChange: this.handleSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Todas\"), React.createElement(\"option\", {\n      value: \"open\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Abertas\"), React.createElement(\"option\", {\n      value: \"closed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Fechadas\"))), React.createElement(IssueList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, issues.map(issue => React.createElement(\"li\", {\n      key: String(issue.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: issue.user.avatar_url,\n      alt: issue.user.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: issue.html_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, issue.title), issue.labels.map(label => React.createElement(\"span\", {\n      key: String(label.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, label.name))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, issue.user.login))))));\n  }\n\n}\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string\n    })\n  }).isRequired\n};","map":{"version":3,"sources":["/home/felipe/desafio5/src/pages/Repository/index.js"],"names":["React","Component","Link","PropTypes","api","Loading","Owner","IssueList","Selected","Container","Repository","state","repository","issues","loading","handleSelect","e","selected","target","value","get","owner","login","name","params","per_page","setState","type","data","componentDidMount","match","props","repoName","decodeURIComponent","Promise","all","render","avatar_url","description","map","issue","String","id","user","html_url","title","labels","label","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\n\nimport { Loading, Owner, IssueList, Selected } from './styles';\nimport Container from '../../components/Container';\n\nexport default class Repository extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        repository: PropTypes.string,\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    repository: {},\n    issues: [],\n    loading: true,\n  };\n\n  async componentDidMount() {\n    const { match } = this.props;\n\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const [repository, issues] = await Promise.all([\n      api.get(`/repos/${repoName}`),\n      api.get(`/repos/${repoName}/issues`, {\n        params: {\n          state: 'open',\n          per_page: 5,\n        },\n      }),\n    ]);\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false,\n    });\n  }\n\n  handleSelect = async e => {\n    const selected = e.target.value;\n    const { repository } = this.state;\n\n    const issues = api.get(\n      `/repos/${repository.owner.login}/${repository.name}/issues`,\n      {\n        params: {\n          state: selected,\n          per_page: 5,\n        },\n      }\n    );\n\n    this.setState({\n      type: selected,\n      issues: issues.data,\n    });\n  };\n\n  render() {\n    const { repository, issues, loading } = this.state;\n\n    if (loading) {\n      return <Loading>Carregando...</Loading>;\n    }\n    return (\n      <Container>\n        <Owner>\n          <Link to=\"/\">Voltar aos repositórios</Link>\n          <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n          <h1>{repository.name}</h1>\n          <p>{repository.description}</p>\n        </Owner>\n\n        <Selected>\n          <span>Listar: </span>\n          <select name=\"issueStatus\" onChange={this.handleSelect}>\n            <option value=\"all\">Todas</option>\n            <option value=\"open\">Abertas</option>\n            <option value=\"closed\">Fechadas</option>\n          </select>\n        </Selected>\n\n        <IssueList>\n          {issues.map(issue => (\n            <li key={String(issue.id)}>\n              <img src={issue.user.avatar_url} alt={issue.user.login} />\n              <div>\n                <strong>\n                  <a href={issue.html_url}>{issue.title}</a>\n                  {issue.labels.map(label => (\n                    <span key={String(label.id)}>{label.name}</span>\n                  ))}\n                </strong>\n                <p>{issue.user.login}</p>\n              </div>\n            </li>\n          ))}\n        </IssueList>\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}